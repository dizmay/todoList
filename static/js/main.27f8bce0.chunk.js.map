{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","autoFocus","disabled","length","Todo","todos","completeTodo","removeTodo","editTodo","setEdit","map","todo","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27f8bce0.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nconst TodoForm = (props) => {\r\n\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input\r\n    })\r\n\r\n    setInput('')\r\n  }\r\n\r\n  return (\r\n    <form className='todoForm' onSubmit={handleSubmit}>\r\n      {props.edit\r\n        ? (<><input type=\"text\" placeholder='Edit your todo...' value={input} name='text'\r\n                    className='todoInput edit'\r\n                    onChange={handleChange} autoFocus/>\r\n          <button disabled={input.length > 35} className='todoBtn edit'>Edit</button>\r\n          {input.length > 35 && <div className='errorMessage'>Todo must be 35 characters or less!</div>}\r\n        </>)\r\n        : (<><input type=\"text\" placeholder='Add a todo...' value={input}\r\n                    name='text' className='todoInput'\r\n                    onChange={handleChange} autoFocus/>\r\n          <button disabled={input.length > 35} className='todoBtn'>Add</button>\r\n          {input.length > 35 && <div className='errorMessage'>Todo must be 35 characters or less!</div>}\r\n        </>)}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TodoForm;","import React, {useState} from 'react'\r\nimport {IoMdCheckmarkCircle, RiCloseCircleLine, TiEdit} from \"react-icons/all\";\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nconst Todo = ({todos, completeTodo, removeTodo, editTodo}) => {\r\n\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  })\r\n\r\n  const submitEdit = value => {\r\n    editTodo(value, edit.id)\r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    })\r\n  }\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitEdit}/>\r\n  }\r\n\r\n  return todos.map((todo, id) => (\r\n      <div className={todo.isComplete ? 'todoRow complete' : 'todoRow'} key={id}>\r\n        <div className='todoRowText' key={todo.id}>\r\n          {todo.text}\r\n        </div>\r\n        <div className='icons'>\r\n          <IoMdCheckmarkCircle onClick={() => completeTodo(todo.id)}/>\r\n          <TiEdit onClick={() => setEdit({id: todo.id, value: todo.text})} className='editIcon'/>\r\n          <RiCloseCircleLine onClick={() => removeTodo(todo.id)} className='deleteIcon'/>\r\n        </div>\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Todo;","import React, {useState} from 'react'\r\nimport TodoForm from \"./TodoForm\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = (props) => {\r\n\r\n  const [todos, setTodos] = useState([])\r\n\r\n  const addTodo = todo => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos]\r\n    setTodos(newTodos)\r\n  }\r\n\r\n  const editTodo = (newValue, id) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n    setTodos(prev => prev.map(item => item.id === id ? newValue : item))\r\n  }\r\n\r\n  const removeTodo = id => {\r\n    const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n    setTodos(removeArr)\r\n  }\r\n\r\n  const completeTodo = id => {\r\n    let updatedTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete\r\n      }\r\n      return todo;\r\n    })\r\n    setTodos(updatedTodos)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <h1>What's the plan for today?</h1>\r\n        <TodoForm onSubmit={addTodo}/>\r\n        <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} editTodo={editTodo}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList;","import './App.css';\nimport React from \"react\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n    return (\n        <div className=\"todoApp\">\n            <TodoList />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}